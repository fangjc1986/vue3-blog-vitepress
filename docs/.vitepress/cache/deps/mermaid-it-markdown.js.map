{
  "version": 3,
  "sources": ["../../../../node_modules/mermaid/dist/mermaid.core.mjs", "../../../../node_modules/mermaid-it-markdown/dist/mermaid-it-markdown.js"],
  "sourcesContent": ["import \"ts-dedent\";\nimport { L } from \"./mermaid-04fb0060.js\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"d3\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nexport {\n  L as default\n};\n", "import mermaid from \"mermaid\";\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  if (!getRandomValues) {\n    getRandomValues = typeof crypto !== \"undefined\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n    }\n  }\n  return getRandomValues(rnds8);\n}\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 256).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\nconst randomUUID = typeof crypto !== \"undefined\" && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nconst native = {\n  randomUUID\n};\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)();\n  rnds[6] = rnds[6] & 15 | 64;\n  rnds[8] = rnds[8] & 63 | 128;\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nconst genUid = (split = \"\") => {\n  return v4().split(\"-\").join(split);\n};\nconst sleep = async (ms) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\nconst renderMermaid = async (code, targetId) => {\n  let limit = 100;\n  while (limit-- > 0) {\n    const container = document.getElementById(targetId);\n    if (!container) {\n      await sleep(100);\n      continue;\n    }\n    try {\n      const { svg } = await mermaid.render(\"mermaid-svg-\" + genUid(), code, container);\n      container.innerHTML = svg;\n    } catch (e) {\n    }\n    break;\n  }\n};\nconst MermaidIt = function(md) {\n  mermaid.initialize({ startOnLoad: false });\n  const defaultRenderer = md.renderer.rules.fence.bind(md.renderer.rules);\n  md.renderer.rules.fence = (tokens, idx, options, env, self) => {\n    const token = tokens[idx];\n    const info = token.info.trim();\n    if (info === \"mermaid\") {\n      const containerId = \"mermaid-container-\" + genUid();\n      renderMermaid(token.content, containerId).then();\n      const container = document.createElement(\"div\");\n      container.id = containerId;\n      return container.outerHTML;\n    }\n    return defaultRenderer(tokens, idx, options, env, self);\n  };\n};\nexport {\n  MermaidIt as default\n};\n"],
  "mappings": "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",
  "names": []
}
