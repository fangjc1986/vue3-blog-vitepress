import{g as s}from"./number.util.Cpjkx7EM.js";const a=(t=[],r=1)=>{if(!t.length)return[];const e=[...t],n=[];for(;r-- >0;){const o=Math.floor(Math.random()*e.length);n.push(e.splice(o,1)[0])}return n},l=(t=[],r=1,e=!1)=>{if(!t.length)return[];e||(r=Math.min(r,t.length));const n=[],o=s(0,t.length-1);for(let h=0;h<r;h++)n.push(t[(h+o)%t.length]);return n},i=(t,r)=>Number.parseInt(Math.random()*(r-t+1));Array.prototype.getRandom=function(t=null){t===null&&(t=this.length);let r=[...this],e=[];for(;t-- >0;){const n=i(0,r.length-1);e.push(r.splice(n,1)[0])}return e};Array.prototype.randomSort=function(){const t=this.getRandom();for(let r=0;r<this.length;r++)this[r]=t[r];return this};Array.prototype.getRandomSlice=function(t=null){t===null&&(t=this.length);const r=[],e=i(0,this.length-1);for(let n=0;n<t;n++)r.push(this[(e+n)%this.length]);return r};Array.prototype.createNatureNumber=function(t,r=1){return new Array(t).fill(null).map((e,n)=>n+r)};Array.prototype.isSame=function(t=[]){if(this.length!==t.length)return!1;const r=new Set(this.concat(t));return r.size===this.length&&r.size===t.length};Array.prototype.eachOneByOne=function(t,r=null,e=!0){const n=e?this:[];for(let o=0;o<this.length;o++)n[o]=this[o],!(t.length<=o)&&r&&(n[o]=r(this[o],t[o]));return n};Number.prototype.floor=function(){return Math.floor(this)};Number.prototype.round=function(){return Math.round(this)};Number.prototype.ceil=function(){return Math.ceil(this)};export{a,l as g};
